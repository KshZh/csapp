# Execution begins at address 0 
	.pos 0 
	irmovq stack, %rsp  	# Set up stack pointer  
	call main		# Execute main program
	halt			# Terminate program 

.align 8
# Source block
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:	irmovq src,%rdi	
	irmovq dest,%rsi
	irmovq dest,%rdx
	subq %rdi,%rdx		# len的单位是字节
	call copy		# copy(src, dest, len)
	ret 

/* $begin copy-ys */
# long copy(long *src, long *dest, long len)
copy:
	xorq %rax,%rax		# result = 0
	irmovq $8,%rcx		# step
loop:	mrmovq (%rdi),%r10
	rmmovq %r10,(%rsi)
	xorq %r10,%rax
	subq %rcx,%rdx		# 更新循环控制变量
	iaddq $8,%rdi
	iaddq $8,%rsi
	andq %rdx,%rdx		# 0&0=0, (!0)&(!0)!=0
	jne loop		# 想不想等通过ZF判断。
	ret
/* $end copy-ys */

# The stack starts here and grows to lower addresses
	.pos 0x100		
stack:	 
